pivot_wider(
id_cols = ballotName,
names_from = contributor_type_group,
values_from = total
) %>%
mutate(
total = round(sum(c(individual, `Candidate Committee`, `outside group`, other, self), na.rm=T), 0)
) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
library(tidyverse)
library(lubridate)
library(DT)
library(stringr)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set working directory to file location
setwd("~/Documents/GitHub/2020-10-campaign-contributions/workspace")
#import candidates from primary and general
candidates <- read_csv('data/candidates.csv')
#candidates not on ballot
not_on_ballot <- read_csv('committees_not_on_ballot.csv')
# import 2020 contributions from individuals to state races.
contributions.raw <- read_csv('data/all_contributions_2020.csv')
# convert names to snake_case
colnames(contributions.raw) <- gsub(' ', '_', tolower(colnames(contributions.raw)))
contributions.noParty <- contributions.raw %>%
mutate(contribution_date = as.Date(contribution_date, format='%m/%d/%Y') )  %>%
# removes records where office is NA, leaving only contributions to committees supporting candidates
# removes candidate laons
filter(
!is.na(office),
contribution_type != 'Candidate Loan'
)
# join party data from candidate list
contributions <- left_join(
contributions.noParty %>%
filter(
receiving_committee %!in% not_on_ballot$committee
) %>%
mutate(
committeeJoin = gsub(' ','', receiving_committee)
),
candidates %>%
select(committee, party, ballotName, inGeneral) %>%
mutate(
committeeJoin = gsub(' ','', committee)
),
by = 'committeeJoin'
) %>%
filter(!is.na(party)) %>%
select(-filing_period) %>%
distinct()
# original      17,704
# not on ballot 17,311
# no party join 17,117
# distinct      15,873
contributions.individuals <- contributions %>%
filter(
contributor_type %in% c('Individual', "Total of Contributions not exceeding $100"),
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
)
contributions.individuals %>%
group_by(
contribution_date
) %>%
summarise(total = sum(contribution_amount)) %>%
ggplot(
aes(x = contribution_date, y=total)
) +
geom_col() +
labs(title='Daily contributions, all candidates')
contributions.individuals %>%
group_by(
party,
contribution_date
) %>%
summarise(total = sum(contribution_amount)) %>%
mutate(cum_total = cumsum(total)) %>%
ggplot(
aes(x = contribution_date, y=cum_total, color=party)
) +
geom_line() +
labs(title='Cumulative contributions, by party')
contributions %>%
summarise(total = sum(contribution_amount))
contributions %>%
filter(contributor_name != 'Total of Contributions not exceeding $100') %>%
group_by(contributor_name, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions %>%
filter(contributor_name != 'Total of Contributions not exceeding $100') %>%
select(
contributor_name, party
) %>%
distinct() %>%
group_by(contributor_name) %>%
summarise(numParties = n()) %>%
filter( numParties > 1) %>%
arrange(desc(numParties)) %>%
datatable(options = list(pageLength = 10))
contributions %>%
filter(grepl("Police", contributor_name, ignore.case=TRUE)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
summarise(total = sum(contribution_amount))
contributions.individuals %>%
group_by(party) %>%
summarise(total = sum(contribution_amount)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(contributor_name) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(contributor_name, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(office, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(ballotName, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
filter(inGeneral == 1) %>%
group_by(ballotName) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
select(
contributor_name, committee
) %>%
distinct() %>%
group_by(contributor_name) %>%
summarise(numCandidates = n()) %>%
ungroup() %>%
group_by(numCandidates) %>%
summarise(group_count = n()) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
select(
contributor_name, party
) %>%
distinct() %>%
group_by(contributor_name) %>%
summarise(numParties = n()) %>%
ungroup() %>%
group_by(numParties) %>%
summarise(group_count = n()) %>%
datatable(options = list(pageLength = 10))
outside_groups <- c("Out-of-State or Federal Committee","Individual", "Business/Group/Organization", "Political Action Committee", "Labor Union", "Non-Profit Organization")
carney_murray_group <- contributions %>%
filter(
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100"),
contributor_type %in% outside_groups,
receiving_committee %in% c('Friends for John Carney', 'Murray for Delaware')
# contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
)
carney_murray_group %>%
filter(contributor_type %in% c("Individual","Total of Contributions not exceeding $100")) %>%
group_by(receiving_committee) %>%
summarise(total = sum(contribution_amount) )
carney_murray_group %>%
filter(contributor_type %!in% c("Individual","Total of Contributions not exceeding $100")) %>%
group_by(receiving_committee) %>%
summarise(total = sum(contribution_amount) )
carney_murray_group %>%
filter(contributor_type %!in% c("Individual","Total of Contributions not exceeding $100")) %>%
group_by(receiving_committee, contributor_name) %>%
summarise(total = sum(contribution_amount) ) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
carney_murray_group %>%
group_by(receiving_committee) %>%
summarise(total = sum(contribution_amount) )
contributions %>%
filter(
str_detect(office, 'State'),
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
) %>%
select(
contributor_name,
contributor_type,
contribution_type,
contribution_amount,
ballotName
) %>%
mutate(
contributor_type_group = case_when(
contributor_type %in% c("Individual","Total of Contributions not exceeding $100") ~ 'individual',
contributor_type == 'Candidate Committee' ~ 'Candidate Committee',
contributor_type %in% outside_groups ~ 'outside group',
contributor_type == 'Self (Candidate)' ~ 'self',
TRUE ~ 'other'
)
) %>%
group_by(
ballotName,
contributor_type_group
) %>%
summarise(
total = round(sum(contribution_amount), 0)
) %>% View()
pivot_wider(
id_cols = ballotName,
names_from = contributor_type_group,
values_from = total
) %>%
mutate(
total = round(sum(c(individual, `Candidate Committee`, `outside group`, other, self), na.rm=T), 0)
) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions %>%
filter(
str_detect(office, 'State'),
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
) %>%
select(
contributor_name,
contributor_type,
contribution_type,
contribution_amount,
ballotName
) %>%
mutate(
contributor_type_group = case_when(
contributor_type %in% c("Individual","Total of Contributions not exceeding $100") ~ 'individual',
contributor_type == 'Candidate Committee' ~ 'Candidate Committee',
contributor_type %in% outside_groups ~ 'outside group',
contributor_type == 'Self (Candidate)' ~ 'self',
TRUE ~ 'other'
)
) %>%  View()
library(tidyverse)
library(lubridate)
library(DT)
library(stringr)
'%!in%' <- function(x,y)!('%in%'(x,y))
# Set working directory to file location
setwd("~/Documents/GitHub/2020-10-campaign-contributions/workspace")
#import candidates from primary and general
candidates <- read_csv('data/candidates.csv')
#candidates not on ballot
not_on_ballot <- read_csv('committees_not_on_ballot.csv')
# import 2020 contributions from individuals to state races.
contributions.raw <- read_csv('data/all_contributions_2020.csv')
# convert names to snake_case
colnames(contributions.raw) <- gsub(' ', '_', tolower(colnames(contributions.raw)))
contributions.noParty <- contributions.raw %>%
mutate(contribution_date = as.Date(contribution_date, format='%m/%d/%Y') )  %>%
# removes records where office is NA, leaving only contributions to committees supporting candidates
# removes candidate laons
filter(
!is.na(office),
contribution_type != 'Candidate Loan'
)
# join party data from candidate list
contributions <- left_join(
contributions.noParty %>%
filter(
receiving_committee %!in% not_on_ballot$committee
) %>%
mutate(
committeeJoin = gsub(' ','', receiving_committee)
),
candidates %>%
select(committee, party, ballotName, inGeneral) %>%
mutate(
committeeJoin = gsub(' ','', committee)
),
by = 'committeeJoin'
) %>%
filter(!is.na(party)) %>%
select(-filing_period) %>%
distinct()
# original      17,704
# not on ballot 17,311
# no party join 17,117
# distinct      15,873
contributions.individuals <- contributions %>%
filter(
contributor_type %in% c('Individual', "Total of Contributions not exceeding $100"),
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
)
contributions.individuals %>%
group_by(
contribution_date
) %>%
summarise(total = sum(contribution_amount)) %>%
ggplot(
aes(x = contribution_date, y=total)
) +
geom_col() +
labs(title='Daily contributions, all candidates')
contributions.individuals %>%
group_by(
party,
contribution_date
) %>%
summarise(total = sum(contribution_amount)) %>%
mutate(cum_total = cumsum(total)) %>%
ggplot(
aes(x = contribution_date, y=cum_total, color=party)
) +
geom_line() +
labs(title='Cumulative contributions, by party')
contributions %>%
summarise(total = sum(contribution_amount))
contributions %>%
filter(contributor_name != 'Total of Contributions not exceeding $100') %>%
group_by(contributor_name, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions %>%
filter(contributor_name != 'Total of Contributions not exceeding $100') %>%
select(
contributor_name, party
) %>%
distinct() %>%
group_by(contributor_name) %>%
summarise(numParties = n()) %>%
filter( numParties > 1) %>%
arrange(desc(numParties)) %>%
datatable(options = list(pageLength = 10))
contributions %>%
filter(grepl("Police", contributor_name, ignore.case=TRUE)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
summarise(total = sum(contribution_amount))
contributions.individuals %>%
group_by(party) %>%
summarise(total = sum(contribution_amount)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(contributor_name) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(contributor_name, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(office, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
group_by(ballotName, party) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
filter(inGeneral == 1) %>%
group_by(ballotName) %>%
summarise(total = sum(contribution_amount)) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
select(
contributor_name, committee
) %>%
distinct() %>%
group_by(contributor_name) %>%
summarise(numCandidates = n()) %>%
ungroup() %>%
group_by(numCandidates) %>%
summarise(group_count = n()) %>%
datatable(options = list(pageLength = 10))
contributions.individuals %>%
select(
contributor_name, party
) %>%
distinct() %>%
group_by(contributor_name) %>%
summarise(numParties = n()) %>%
ungroup() %>%
group_by(numParties) %>%
summarise(group_count = n()) %>%
datatable(options = list(pageLength = 10))
outside_groups <- c("Out-of-State or Federal Committee","Individual", "Business/Group/Organization", "Political Action Committee", "Labor Union", "Non-Profit Organization")
carney_murray_group <- contributions %>%
filter(
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100"),
contributor_type %in% outside_groups,
receiving_committee %in% c('Friends for John Carney', 'Murray for Delaware')
# contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
)
carney_murray_group %>%
filter(contributor_type %in% c("Individual","Total of Contributions not exceeding $100")) %>%
group_by(receiving_committee) %>%
summarise(total = sum(contribution_amount) )
carney_murray_group %>%
filter(contributor_type %!in% c("Individual","Total of Contributions not exceeding $100")) %>%
group_by(receiving_committee) %>%
summarise(total = sum(contribution_amount) )
carney_murray_group %>%
filter(contributor_type %!in% c("Individual","Total of Contributions not exceeding $100")) %>%
group_by(receiving_committee, contributor_name) %>%
summarise(total = sum(contribution_amount) ) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
carney_murray_group %>%
group_by(receiving_committee) %>%
summarise(total = sum(contribution_amount) )
contributions %>%
filter(
str_detect(office, 'State'),
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
) %>%
select(
contributor_name,
contributor_type,
contribution_type,
contribution_amount,
ballotName
) %>%
mutate(
contributor_type_group = case_when(
contributor_type %in% c("Individual","Total of Contributions not exceeding $100") ~ 'individual',
contributor_type == 'Candidate Committee' ~ 'Candidate Committee',
contributor_type %in% outside_groups ~ 'outside group',
contributor_type == 'Self (Candidate)' ~ 'self',
TRUE ~ 'other'
)
) %>%  View()
group_by(
ballotName,
contributor_type_group
) %>%
summarise(
total = round(sum(contribution_amount), 0)
) %>%
pivot_wider(
id_cols = ballotName,
names_from = contributor_type_group,
values_from = total
) %>%
mutate(
total = round(sum(c(individual, `Candidate Committee`, `outside group`, other, self), na.rm=T), 0)
) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions %>%
filter(
str_detect(office, 'State'),
contribution_type %in% c("Check", "Electronic Fund Transfer", "Credit Card", "Cash", "Total of Contributions not exceeding $100")
) %>%
select(
contributor_name,
contributor_type,
contribution_type,
contribution_amount,
ballotName
) %>%
mutate(
contributor_type_group = case_when(
contributor_type %in% c("Individual","Total of Contributions not exceeding $100") ~ 'individual',
contributor_type == 'Candidate Committee' ~ 'Candidate Committee',
contributor_type %in% outside_groups ~ 'outside group',
contributor_type == 'Self (Candidate)' ~ 'self',
TRUE ~ 'other'
)
) %>%
group_by(
ballotName,
contributor_type_group
) %>%
summarise(
total = round(sum(contribution_amount), 0)
) %>%
pivot_wider(
id_cols = ballotName,
names_from = contributor_type_group,
values_from = total
) %>%
mutate(
total = round(sum(c(individual, `Candidate Committee`, `outside group`, other, self), na.rm=T), 0)
) %>%
arrange(desc(total)) %>%
datatable(options = list(pageLength = 10))
contributions %>%
colnames()
contributions %>%
select(contributor_name, contributor_type, contribution_type, contribution_amount, receiving_committee, ballotName) %>%
View()
contributions %>%
select(contributor_name, contribution_type, contribution_amount, ballotName) %>%
View()
unique(contributions$contribution_type)
View(contributions.raw)
as.Date(contributions$contribution_date)
glimpse(as.Date(contributions$contribution_date))
summary(as.Date(contributions$contribution_date))
links <- c("https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/yj3qdxoyctovnxrjbuml.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/dntckrj80gullzqhm6es.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/omhlbwzoa1yiqtzfjxsd.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/csrpsgpel3z1ke1t2uty.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/umkmqhyksqcwilrlerge.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/cg7fsgfnkkpuyq1ajqpf.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/yinznldug3yojtldl8ux.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/g548wv4ix4wvshzdtcws.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/dtzbdfz3knvoqq8ehzsr.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/bkgpy1cnemrcdwyhfkhk.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/n8xxhm8f6npx5msiclhl.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/t62i3u3tr9vtsnl3lwzd.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/trqzttwrisbgnyhnnwia.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/lpua38hveiilobzv7xcn.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/mdv6yekgnveoxu8fdz14.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/x9vvcntvtmgrkojpvvnr.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/hgklpdzk2tv98wrwkr5q.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/ncnzvoldz2gokgrszjsg.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/s5syo2tvnspx3x6uybmz.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/xnes1qpwj8mocfysutsx.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/zmaowrfydlg48o3jeznw.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/leapmy0bqtvntliefdmr.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/pufwqdswtnuevclq2kkx.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/pfmkadwvgvo2prursyo0.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/gdnwm3rhzj8v5ku32f9z.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/h2mpqocl6rzncf7n9uw5.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/ixladqgn3e8qoam5jvwa.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/jhf5l81xlopng7n48jeh.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/jpx91ty9aoo9fqzszpvf.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/lnr015ytw5kxztiiqafn.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/iilpicdupfe8cgivkewo.png", "https://content-static.delawareonline.com/projects/2020-02-eagles-stay-or-go/images/lmhrtth4fx8gznj33nst.png")
setwd("~/Documents/GitHub/2020-11-eagles-stay-or-go/app/data")
for (link in links) {
download.file(link)
}
?download.file
